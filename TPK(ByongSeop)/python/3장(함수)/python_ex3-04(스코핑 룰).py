#이름공간(namespace)이란
#프로그램에서 쓰이는 이름이 저장되는 공간

#예를들어

a = [1,2,3]
def scoping():
    a = [4,5,6]

#다음과 같은 소스에서 변수를 선언 했을때 [1,2,3]라는 값을 가지는 리스트 타입 객체가 메모리 공간에 생기고
#a 라는 이름을 가진 레퍼런스가 생성된다
#이때 a라는 이름은 이름공간에 저장되고 이후에 a라는 이름을 가지고 [1,2,3]이라는 객체에 접근이 가능

#이름은 미리 생성되지 않고 값이 치환될 때 만들어지기 때문에 변경, 삭제, 검색을 할 수 있다.

#함수는 별도의 이름공간을 가진다
#함수 내부에 선언되는 변수는  함수 내부의 이름공간을 참조 하며 이곳에서 이름을 찾지 못하면 사위 이름공간에서 이름을 찾는다
#이때 함수 내부의 이름공간을 지역 영역(local scope) 함수 밖의 영역을 전역 영역(Global scope)라 하며
#파이썬 자체에 정의한 내용에 대한 영역은 내장 영역(Built-in Scope)라고 한다

#예를들면

x = 1
def scope(a):
    return a+x
print(scope(1))

def scope2(a):
    x=2
    return a+x
print(scope2(1))

#이름을 검색하는 순서는 지역 전역 내장 순서대로 찾는다 (LGB 규칙)
#지역 영역에서 전역 영역의 변수를 찾고 싶다면 global선언

g = 1
def testScope(a):
    global g
    g = 2
    return g+a
print(testScope(1))

#함수 내부에서 사용한 변수는 함수가 끝나면 메모리 공간에서 모두 반환 되지만 전역 영역 변수들은 남아 있다