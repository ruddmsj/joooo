#함수는 직접 만들 수 도 있으며 이미 내장되어 있는 것도 있다

#함수 선언은 def로 시작하여 :로 끝내며 함수의 시작과 끝은 코드의 들여쓰기로 구분한다
#시작과 끝을 명시해 주지 않는다
#함수 선언을 헤더 파일에 미리 선언하거나 인터페이스/구현 같은 부분으로 나누지 않고 함수가 필요할때 바로 선언하고 사용 가능


#함수 선언 문법
#def <함수명>(인자1,인자2,...인자n):
#   <구문>
#   return <반환값>

def Times(a,b):
    return a*b
print(Times)
print(Times(10,10))

#함수가 선언 되면 우섡 메모리 공간 어딘가에 함수 객체가 생성된다
#그 다음 함수 이름의 레퍼런스가 생성되며 방금 생성된 객체를 가리킨다

#globals()라는 내장함수를 실행하면 함수 객체들을 볼 수 있다

print(globals())

#함수 레퍼런스는 다른 변수에 할당 할 수 있는데 객체가 복사 되는 것이 아니라 단순히 레퍼런스만 복사 된 것이다

myTimes = Times
r = myTimes(10,10)
print(r)

#dir()함수를 이용해 __builtins__에 있는 내장영역에 이름이 저장되어 있는 것들을 볼 수 있다.
#dir(__builtins__)