class MyClass:              #클래스 정의
    """아주 간단한 클래스"""
    Name = "Default Name"   #멤버 변수
    def Print(self):        #멤버 메서드
        print("My Name is {0}".format(self.Name))


p1 = Person()   #인스턴스 객체 생성
p1.Print()      #멤버 변수 값을 출력

#클래스를 정의하면 클래스 객체가 생성되고 독립적인 이름공간이 만들어진다
#이렇게 생성된 공간에 멤버 변수와 메서드가 존재

#클래스를 사용하려면 인스턴스를 만들어야 한다
#클래스와 동일하게 인스턴스 객체가 생성되고 독립적인 이름공간이 생성 된다.


p1.Name = "내 이름은 강병섭"   #인스턴스 객체의 멤버변수 값 변경
p1.Print()                   #변경된 멤버 변수 값이 출력

#클래스 객체와 인스턴스 객체 모두 멤버 변수와 멤버 메서드에 접근 할때는 속성접근자('.')를 사용한다
#인스턴스의 모든 멤버 변수와 메서드의 접근 권한은 public이다 (파이썬의 설계 철학은 개발자에게 많은 제약을 가하지 않는 거이기 때문에 기본 접근 권한이 public 이다)

#self는 현재 인스턴스 객체를 가리킨다

#Bound Method호출: 메서드를 호출할 때 암묵적으로 첫 인자로 인스턴스 객체를 넘기는 호출 방식
p1.Print()
#Unbound Method호출: 메서드 호출시 명시적으로 첫 인자로 인스턴스 객체를 전달하는 호출 방식
Person.Print(p1)